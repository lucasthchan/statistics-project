---
title: "Analyzing the Engagement of Wellspring Members"
subtitle: "TUT0208-B"
author: "Lucas Chan, Yuki Meng, JungWoo Song"
format: beamer
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,      # Hide code
  include = TRUE,   # Do not include output
  warning = FALSE,   # Suppress warnings
  message = FALSE,   # Suppress messages
  results = TRUE   # Display printed output (can use results=FALSE for a specific code chunk to suppress output)
)

# Note: the options above are to hide the code chunk in the slides and to not include the code in the slides
# There are many other options you can use to customize which parts of the code are run / displayed, 
# as well as how the output is displayed. 
# You can learn more at https://quarto.org/docs/computations/execution-options.html

```

```{r load-data, include=FALSE, results=FALSE}

# setup
library(tidyverse)

# Load data we need to load the data, but don't want to display it in our slides
# The code chunk options at in the curly brackets above specif
data_patient_members <- read_csv("Member_Background.csv")
data_attendance_records <- read_csv("Service_Deliveries.csv")


## Parse members data
## Types of cancer - convert to set of indicator variables for different types of cancer (don't include ones which are too rare)
data_patient_members <- data_patient_members |>
   mutate(lung = str_detect(types_of_cancer, "Lung"),
         breast = str_detect(types_of_cancer, "Breast"),
         brain = str_detect(types_of_cancer, "Brain"),
         leukemia = str_detect(types_of_cancer, "Leukemia"),
         prostate = str_detect(types_of_cancer, "Prostate"),
         colorectal = str_detect(types_of_cancer, "Colorectal"),
         pancreatic = str_detect(types_of_cancer, "Pancreatic"),
         lymphoma_non_hodgkins = str_detect(types_of_cancer, "Lymphoma, Non-hodgkins"),
         liver = str_detect(types_of_cancer, "Liver"),
         multiple_myeloma = str_detect(types_of_cancer, "Multiple Myeloma"),
         bladder = str_detect(types_of_cancer, "Bladder"),
         cervical = str_detect(types_of_cancer, "Cervical"),
         esophagus = str_detect(types_of_cancer, "Esophagus"),
         gallbladder_and_bile_duct = str_detect(types_of_cancer, "Gallbladder and Bile Duct"),
         head_and_neck = str_detect(types_of_cancer, "Head and Neck"),
         kidney = str_detect(types_of_cancer, "Kidney"),
         lymphoma_hodgkins = str_detect(types_of_cancer, "Lymphoma, Hodgkins"),
         ovarian = str_detect(types_of_cancer, "Ovarian"),
         skin = str_detect(types_of_cancer, "Skin"),
         stomach = str_detect(types_of_cancer, "Stomach"),
         testicular = str_detect(types_of_cancer, "Testicular"),
         thyroid = str_detect(types_of_cancer, "Thyroid"),
         cervical = str_detect(types_of_cancer, "Cervical"),
         other = str_detect(types_of_cancer, "Other"))


## Impairments - convert to set of indicator variables for different types of impairment (don't include ones which are too rare)
data_patient_members <- data_patient_members |>
  mutate(visual = str_detect(i_have_the_following_impairment, "visual"),
         cognitive = str_detect(i_have_the_following_impairment, "cognitive"),
         limited_mobility = str_detect(i_have_the_following_impairment, "mobility"),
         none_of_the_above = str_detect(i_have_the_following_impairment, "None of the above"),
         other = str_detect(i_have_the_following_impairment, "other"),
         speech = str_detect(i_have_the_following_impairment, "speech"),
         hearing = str_detect(i_have_the_following_impairment, "hearing")) 

## Program interests: Split into boolean indicators for different categories
data_patient_members <- data_patient_members |>
  mutate(therapeutic_arts = str_detect(program_interest, "Therapeutic Arts"),
         educational_and_self_developoment = str_detect(program_interest, "Educational & Self-Development"),
         symptom_management = str_detect(program_interest, "Symptom Management"),
         social_events = str_detect(program_interest, "Social / Events"),
         financiaL_and_workplace_strategies = str_detect(program_interest, "Financial & Workplace Strategies"),
         exercise_and_movement = str_detect(program_interest, "Exercise & Movement"),
         individual_and_group_support = str_detect(program_interest, "Individual & Group Support")) |>
  mutate(num_program_interests = therapeutic_arts + educational_and_self_developoment + symptom_management + social_events + financiaL_and_workplace_strategies + exercise_and_movement + individual_and_group_support)

## How did you hear about wellspring: Split into booleans
data_patient_members <- data_patient_members |>
  mutate(word_of_mouth = str_detect(how_have_you_heard_of_wellspring, "Word of mouth"),
         flyer = str_detect(how_have_you_heard_of_wellspring, "flyer"),
         wellspring_member = str_detect(how_have_you_heard_of_wellspring, "Member"),
         wellspring_member = str_detect(how_have_you_heard_of_wellspring, "Volunteer"),
         doctor = str_detect(how_have_you_heard_of_wellspring, "Doctor"),
         hospital = str_detect(how_have_you_heard_of_wellspring, "hospital"),
         hospital = str_detect(how_have_you_heard_of_wellspring, "healthcare"),
         tv = str_detect(how_have_you_heard_of_wellspring, "television"),
         website = str_detect(how_have_you_heard_of_wellspring, "Website"),
         family = str_detect(how_have_you_heard_of_wellspring, "Family"),
         social_media = str_detect(how_have_you_heard_of_wellspring, "Social Media"),
         other = str_detect(how_have_you_heard_of_wellspring, "Other"))

```

```{r create-new-variables, include=FALSE, results=FALSE}
# dataset dimensions
data_attendance_records |> 
  dim()

# What members register for the most events?
data_attendance_records |> 
  group_by(member_id) |>
  summarise(n=n()) |>
  arrange(desc(n))

# Let's examine information on the member with the highest attendance
high_attendance <- data_attendance_records |> 
  filter(member_id == "003ON000007sHYtYAM")

data_patient_members |> filter(member_id == "003ON000007sHYtYAM")

# What is range of registration dates for members in first table
data_patient_members |> 
  group_by(member_start_year) |>
  summarise(n=n()) |>
  arrange(desc(n))
```

## Introduction: Aim

**Wellspring** is a network of charities in Canada that offers programs and services to cancer patients, and has provided us with data to help them gain insight into member engagement.

::: {.callout-tip title="Overall Aim" style="font-size: 10pt"}
The main goal of this project is to help Wellspring evaluate whether or not their current approaches are successful in sufficiently diversifying the age range of their members.
:::

1.  We will then find if age is a significant factor in how often members engage in Wellspring services.

2.  We will first discover whether the redesign changed the median age of members who engage in Wellspring services.

3.  Finally, we will look into whether online events encourage older members to attend events more often.

## Introduction: Dataset

-   Our sample will be all the members whose data is listed in our dataset, which we will treat as representative of the population, which is all Wellspring members.

-   The main audience of this analysis will be Wellspring, who we seek to provide insight to. However, this analysis may prove useful for all who are interested in how best to serve the needs of cancer patients and their family and friends.

## Data Summary

-   The dataset which we will be using has 4829 observations.

-   It has a total of 68 variables; however, we will only be using the below,

    -   The year, month, and day of each Wellspring service delivery.

    -   The age of each Wellspring member (in years).

    -   The number of services that members are present in, and absent in.

    -   Whether a member attended a service.

    -   Whether a program was held online or in-person.

## Methodology

-   We will first perform data wrangling to get the data we need, and filter out all datapoints where information may be missing.

-   Afterwards, we will visualize our data.

-   We will then perform data analysis and interpret the results that we find.

-   Finally, we will relate our interpretation back to the aim of the project.

More details about data wrangling will be in each research question.

## [Research Question 1:]{.underline} **Is there an association between a memberâ€™s age and the number of services that they attended?**

## Variables and Methodology

-   Simple linear regression will be used to find if an association exists between age and the number of services that a member attends.

-   A motivation behind this research question is that finding whether an association exists allows Wellspring to discover if they should make changes to their services to cater to a more diverse age group.

-   This linear regression will be *predictive* -- we are trying to see if a higher or lower age predicts lower attendance in service deliveries.

::: {.callout-tip title="Variables" style="font-size: 10pt"}
-   The age of a member.
-   Total number of services where a member was marked "Present".
:::

## Data Wrangling

Before we perform linear regression, we have to first clean up the raw data that we have. To do this, we will first filter out

-   All observations where the values for the age or the number of services attended is undefined.
-   Observations where the age is listed as a negative number (this is impossible in real life).
-   Observations where the age is listed as 0, as there is an abnormally high number of these datapoints, suggesting that there may be an error that produces these values.

Doing so gives us a table of filtered data;

```{r}
dataset <- data_patient_members |> 
  filter(! is.na(age_years) 
         & ! is.na(number_of_present_service_deliveries) 
         & age_years > 0) |> select(age_years, number_of_present_service_deliveries) 

glimpse(dataset)
```

## Visualization

Before modelling, we will first visualize the data. Observe that

```{r}
plot <- ggplot(dataset, aes(x=age_years, y=number_of_present_service_deliveries)) +  
  geom_point(color="black") +     
  geom_smooth(method="lm", se=FALSE) +    
  labs(x="Age", y="Number of service deliveries attended") + 
  theme_bw()  
plot
```

## Modelling

Computing a relationship between the number of services attended and age through linear modeling gives us the equation

$$ \# \text{ services attended}=0.02987\cdot\text{age}+55.70681 $$

This is the equation of the line that we saw in the prior slide. Notice that this line has a relatively small slope.

-   Additionally, we have the $p$-value of $0.00131$ for the hypothesis that the slope of the relationship between the two variables is $0$.

-   We also have an $R^2$ value of $0.00412$ between the two variables.

## Interpretation

-   With a small slope for the relationship between the number of services attended and age, we could argue that there is *no significant relationship* between the two variables.
-   A small $p$-value suggests that there is strong evidence that the slope between the two variables for all Wellspring members is $0$, indicating that there is no significant association.
-   The $R^2$ value, which measures how well the variation in service attended can be explained by variation in age, is also very small, suggesting that there is little association.

::: {.callout-tip title="One could argue that..." style="font-size: 10pt"}
-   Since there seems to be a peak at age 60 in the scatter plot, performing two regressions for members of age $\ge 60$ and age $<60$ would be more appropriate.

-   However, doing so similarly gives small slope and $R^2$ values, suggesting there is also no significant association.
:::

## Research Question 2

Is the median age of members attended at Wellspring before March 4^th^, 2024 similar to the median age of members attended at Wellspring after March 4^th^, 2024?

## Motivation

-   To understand if changes to the registration system on March 4^th^ affected membership in Wellspring among different age groups, thus helping Wellspring adapt their registration system.

-   To determine whether Wellspring's current system is more effective than previous systems in encouraging a diverse range of age groups to join Wellspring, by comparing the median ages of members in the two time periods.

::: {.callout-tip title="Note" style="font-size: 10pt"}
The median was used instead of mean in order to avoid outliers and a skewed distribution from too heavily affecting the results.
:::

## Methodology

Two-sample hypothesis testing will be used to compare the median ages across two groups (members who joined *before* and *after* March 4^th^, 2024)

-   Null Hypothesis ($H_0$): The median age of the two groups are the same.

-   Alternative Hypothesis ($H_A$): The median age of the two groups are different.

By assuming that $H_0$ is true, we will finding and gathering evidence to evaluate whether our Null Hypothesis is true (and thereby, whether the Alternative Hypothesis is false).

::: {.callout-tip title="Variables" style="font-size: 10pt"}
-   The age of a member
-   The engagement period (whether a member joined before or after March 4^th^, 2024)
:::

## Visualization

A boxplot of the distribution of members' ages in the two groups;

```{r, results=TRUE, echo=FALSE}
library(tidyverse)
data_patient_members <- read_csv("Member_Background.csv")
data_attendance_records <- read_csv("Service_Deliveries.csv")

df <- left_join(data_patient_members, data_attendance_records, by = "member_id")

df$engagement_date <- as.Date(paste(df$delivery_year, df$delivery_month, df$delivery_day, sep = "-"))

threshold_date <- as.Date("2024-03-04")

df <- df %>%
  mutate(engagement_period = ifelse(engagement_date < threshold_date, "Before March 4th, 2024", "After March 4th, 2024"))

df <- df %>%
  filter((age_years > 0) & !is.na(age_years) & !is.na(engagement_period))


ggplot(df, aes(x = engagement_period, y = age_years, fill = engagement_period)) +
  geom_boxplot() +
  labs(title = "Comparison of Age Distribution Before and After March 4th, 2024",
       x = "Engagement Period",
       y = "Age of Member") +
  theme_minimal() +
  scale_fill_manual(values = c("lightblue", "lightcoral"))

```

## Results and Interpretation

-   In our visualization, the median age between two groups is very similar at around 60 years old. The interquartile range, which is a range that most observations fall into, is also similar, at around 50 to 70 years old. Thus, the overall age distribution of the members did not significantly change, showing that the redesign did not shift the age distribution significantly.

-   However, the median age after March 4^th^, 2024 is a little bit higher than that of before March 4^th^, signifying that the age of the typical Wellspring member has slightly increased since the redesign.

-   After using the bootstrap method, we get a $p$-value of 0.9346, which is larger than 0.05, the typical threshold of significance. This means that our statistical analysis fails to produce strong evidence against the Null Hypothesis, suggesting that the median age across the two groups may be equal.

-   <div>

    # 

    </div>

## Research Question 3

## Statement of the Question

Among Wellspring members aged 65 and older, does the format of a program (in-person vs online) affect how often members attend events, and by extension, how many sign up for each format in the first place?

------------------------------------------------------------------------

## Motivation

-   To explore whether different program formats (in-person vs. online) affect attendance and interest levels among senior adults at Wellspring.

-   To measure interest by looking at the number of sign-ups, and attendance by looking at whether those sign-ups were followed through.

-   To examine if barriers such as discomfort with technology or difficulty navigating virtual platforms exist, thus helping Wellspring improve its outreach to senior members.

## Visualization I

```{r}
df <- left_join(data_patient_members, data_attendance_records, by = "member_id")

df_seniors <- df |> filter(!is.na(service_session_location), !is.na(attendance_status), age_years >= 65) |> mutate(missed = attendance_status == "Unexcused Absence", event_format = ifelse(str_detect(service_session_location, "Online"), "Online", "In-Person"))

signups_summary <- df_seniors |> group_by(event_format) |> summarise(signups = n())

missed_summary <- df_seniors |> filter(missed) |> group_by(event_format) |> summarise(missed = n())

combined_summary <- left_join(signups_summary, missed_summary, by = "event_format")

ggplot(combined_summary) + geom_bar(aes(x = event_format, y = signups, fill = "Sign-Ups"), stat = "identity", position = "dodge") + geom_bar(aes(x = event_format, y = missed, fill = "Missed"), stat = "identity", position = "dodge") + labs(title = "Event Sign-Ups and Missed Events (Age 65+)", x = "Event Format", y = "Number of Events", fill = "") + theme_minimal()
```

------------------------------------------------------------------------

## Visualization I

::: {.callout-tip title="Explanation" style="font-size: 10pt"}
The chart above shows how **many** senior members (65+) sign up for and attend events, which allows us to compare between in-person and online formats.
:::

There are a similar number of sign-ups, but the **number of missed online events** is **visibly higher** than the number of missed in-person events.

-   This **could suggest barriers** like technological difficulties, lack of comfort with virtual platforms, and trouble remembering/accessing links.

-   Note that raw counts can be **misleading**; for example, if one format has more total events, it may naturally have more missed ones.

## Visualization II

```{r}
df <- left_join(data_patient_members, data_attendance_records, by = "member_id")

df_seniors <- df |> filter(!is.na(service_session_location), !is.na(attendance_status), age_years >= 65) |> mutate(missed = attendance_status == "Unexcused Absence", event_format = ifelse(str_detect(service_session_location, "Online"), "Online", "In-Person"))

missed_summary <- df_seniors |> group_by(event_format) |> summarise(n_total = n(), n_missed = sum(missed), prop_missed = n_missed / n_total)

ggplot(missed_summary, aes(x = event_format, y = prop_missed, fill = event_format)) + geom_bar(stat = "identity") + labs(title = "Proportion of Missed Events by Format (Age 65+)", x = "Event Format", y = "Proportion Missed") + theme_minimal()

```

------------------------------------------------------------------------

## Visualization II

::: {.callout-tip title="Explanation" style="font-size: 10pt"}
The chart above shows how **often** senior members (65+) sign up for and attend events, which lets us compare the **likelihood** of missing events.
:::

-   **The first chart** shows that seniors sign up for **online and in-person events at almost equal rates**, suggesting similar levels of initial interest across both formats.

-   **Missed events are higher for online programs**, even though the total number of sign-ups is similar.

-   **The second chart** highlights that **a larger proportion of online events are missed** compared to in-person ones.

------------------------------------------------------------------------

## Methodology

We use a two-sample hypothesis test for proportions, where

-    $p_1$ = proportion of missed in-person events

-    $p_2$ = proportion of missed online events

We have the null hypothesis ($H_0$) that $p_1=p_2$ and the alternative hypothesis ($H_A$) that $p_1 \neq p_2$. By assuming $H_0$, we will simulate the difference in missed proportions by randomly shuffling the event format labels.

::: {.callout-tip title="Why use a p-value?" style="font-size: 10pt"}
-   The $p$-value tells us if differences in missed event rates between online and in-person programs is likely due to actual patterns rather than randomness.

-   A very low $p$-value gives us more confidence that online events are missed more often, making any conclusions drawn more conclusive.
:::

## Results and Interpretation

```{r}
obs_diff <- df_seniors |> group_by(event_format) |> summarise(prop_missed = mean(missed)) |> summarise(diff = diff(prop_missed)) |> pull(diff)

set.seed(130)
nsim <- 1000
simulated_diffs <- rep(NA, nsim)

for (i in 1:nsim) {shuffled <- df_seniors |> mutate(shuffled_loc = sample(event_format)) |> group_by(shuffled_loc) |> summarise(prop_missed = mean(missed)) |> summarise(diff = diff(prop_missed)) |> pull(diff)
simulated_diffs[i] <- shuffled
}

p_value <- (sum(abs(simulated_diffs) >= abs(obs_diff)) + 1) / (nsim + 1)
```

-   After performing a hypothesis test, we get a $p$-value of **0.000999**. This means the difference in missed events between in-person and online formats is very unlikely to be due to random chance.

-   This supports visualization II, which shows that seniors miss a **much higher proportion of online events** compared to in-person ones.

-   From the first visualization, we can determine that while senior members have interest in Wellspring events, **something about the online format may be preventing them from following through.**

-   This highlights a potential **barrier to engagement** for older adults in online programs. Addressing this helps Wellspring **retain and better support senior members**, thus successfully diversifying the age range of members.

## Limitations (I)

**The definition of "engagement"**Â 

-   So far, we have been defining engagement in quantitative terms, such as attending services or the act of becoming a member in Wellspring.

-   However, this definition may be too one-dimensional. A person may join Wellspring and attend a program/event but not actively participate.

-   Wellspring could include qualitative variables in the data, such as whether members believed they felt engaged in events. This data, however, could be more difficult to statistically analyze.

**Comparisons from before/after**Â 

-   Differences between the age of new Wellspring members before and after March 4, 2024, could still be affected by a multitude of different factors in addition to the redesign.

## Limitations (II)

-   Seasonal effects, patient health, changes to programs, other external factors could be unaccounted for but still affect service attendance.

-   This means no *causal* relationship can be drawn between the redesign and any shifts in the median age of new members.

**Selection bias in the data**

-   The data that Wellspring provided only accounted for individuals who chose to register.

-   Thus, individuals who viewed the site or were interested in the programs but didn't register were not accounted for.

-   This adds an extra layer of complication on figuring out whether or not the registration change was effectiveÂ 

-   Future data could include pre registration data if possible (web analytics or surveys?)

## Conclusion: Findings

1.  There was no significant association between age and the number of services attended. This suggests that there may not be urgent need for Wellspring to diversify the age range of its members.
2.  The overall impact of the redesign on the median age of Wellspring members is minimal, suggesting that the redesign little in further diversifying the age range of members.
3.  Moreover, there are differences of the proportion of missed events between in-person and online formats, suggesting that event formats influences attendance behavior.

These results will be useful for Wellspring, as ensuring that cancer patients of all age groups feel welcome is key to Wellspring's goal of serving *all* Canadians who feel the effects of cancer.

## Conclusion: Recommendations

-   The median age of Wellspring members is around 60 years old, which is relatively high. Therefore, Wellspring is recommended to organize programs and services catered towards younger cancer patients, so that they do not feel alienated by the disparity between their age and the median age at Wellspring.
-   Despite this, Wellspring's average is still lower than the global median age for a cancer diagnosis, at 66. **(CITATION?)** Therefore, Wellspring can continue to provide suitable programs for old members to make sure they attend programs frequently, and pay attention to the event formats by offering more in-person programs. **(SAM'S PART)**
