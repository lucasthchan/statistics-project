---
title: "Your Project Title (be descriptive and creative!)"
subtitle: "You can either put a subtitle here or delete this line"
author: "Team members' full names, tutorial groups, and group number"
format: beamer
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,      # Hide code
  include = TRUE,   # Do not include output
  warning = FALSE,   # Suppress warnings
  message = FALSE,   # Suppress messages
  results = TRUE   # Display printed output (can use results=FALSE for a specific code chunk to suppress output)
)

# Note: the options above are to hide the code chunk in the slides and to not include the code in the slides
# There are many other options you can use to customize which parts of the code are run / displayed, 
# as well as how the output is displayed. 
# You can learn more at https://quarto.org/docs/computations/execution-options.html

```

```{r load-data, include=FALSE, results=FALSE}

# setup
library(tidyverse)

# Load data we need to load the data, but don't want to display it in our slides
# The code chunk options at in the curly brackets above specif
data_patient_members <- read_csv("Member_Background.csv")
data_attendance_records <- read_csv("Service_Deliveries.csv")


## Parse members data
## Types of cancer - convert to set of indicator variables for different types of cancer (don't include ones which are too rare)
data_patient_members <- data_patient_members |>
   mutate(lung = str_detect(types_of_cancer, "Lung"),
         breast = str_detect(types_of_cancer, "Breast"),
         brain = str_detect(types_of_cancer, "Brain"),
         leukemia = str_detect(types_of_cancer, "Leukemia"),
         prostate = str_detect(types_of_cancer, "Prostate"),
         colorectal = str_detect(types_of_cancer, "Colorectal"),
         pancreatic = str_detect(types_of_cancer, "Pancreatic"),
         lymphoma_non_hodgkins = str_detect(types_of_cancer, "Lymphoma, Non-hodgkins"),
         liver = str_detect(types_of_cancer, "Liver"),
         multiple_myeloma = str_detect(types_of_cancer, "Multiple Myeloma"),
         bladder = str_detect(types_of_cancer, "Bladder"),
         cervical = str_detect(types_of_cancer, "Cervical"),
         esophagus = str_detect(types_of_cancer, "Esophagus"),
         gallbladder_and_bile_duct = str_detect(types_of_cancer, "Gallbladder and Bile Duct"),
         head_and_neck = str_detect(types_of_cancer, "Head and Neck"),
         kidney = str_detect(types_of_cancer, "Kidney"),
         lymphoma_hodgkins = str_detect(types_of_cancer, "Lymphoma, Hodgkins"),
         ovarian = str_detect(types_of_cancer, "Ovarian"),
         skin = str_detect(types_of_cancer, "Skin"),
         stomach = str_detect(types_of_cancer, "Stomach"),
         testicular = str_detect(types_of_cancer, "Testicular"),
         thyroid = str_detect(types_of_cancer, "Thyroid"),
         cervical = str_detect(types_of_cancer, "Cervical"),
         other = str_detect(types_of_cancer, "Other"))


## Impairments - convert to set of indicator variables for different types of impairment (don't include ones which are too rare)
data_patient_members <- data_patient_members |>
  mutate(visual = str_detect(i_have_the_following_impairment, "visual"),
         cognitive = str_detect(i_have_the_following_impairment, "cognitive"),
         limited_mobility = str_detect(i_have_the_following_impairment, "mobility"),
         none_of_the_above = str_detect(i_have_the_following_impairment, "None of the above"),
         other = str_detect(i_have_the_following_impairment, "other"),
         speech = str_detect(i_have_the_following_impairment, "speech"),
         hearing = str_detect(i_have_the_following_impairment, "hearing")) 

## Program interests: Split into boolean indicators for different categories
data_patient_members <- data_patient_members |>
  mutate(therapeutic_arts = str_detect(program_interest, "Therapeutic Arts"),
         educational_and_self_developoment = str_detect(program_interest, "Educational & Self-Development"),
         symptom_management = str_detect(program_interest, "Symptom Management"),
         social_events = str_detect(program_interest, "Social / Events"),
         financiaL_and_workplace_strategies = str_detect(program_interest, "Financial & Workplace Strategies"),
         exercise_and_movement = str_detect(program_interest, "Exercise & Movement"),
         individual_and_group_support = str_detect(program_interest, "Individual & Group Support")) |>
  mutate(num_program_interests = therapeutic_arts + educational_and_self_developoment + symptom_management + social_events + financiaL_and_workplace_strategies + exercise_and_movement + individual_and_group_support)

## How did you hear about wellspring: Split into booleans
data_patient_members <- data_patient_members |>
  mutate(word_of_mouth = str_detect(how_have_you_heard_of_wellspring, "Word of mouth"),
         flyer = str_detect(how_have_you_heard_of_wellspring, "flyer"),
         wellspring_member = str_detect(how_have_you_heard_of_wellspring, "Member"),
         wellspring_member = str_detect(how_have_you_heard_of_wellspring, "Volunteer"),
         doctor = str_detect(how_have_you_heard_of_wellspring, "Doctor"),
         hospital = str_detect(how_have_you_heard_of_wellspring, "hospital"),
         hospital = str_detect(how_have_you_heard_of_wellspring, "healthcare"),
         tv = str_detect(how_have_you_heard_of_wellspring, "television"),
         website = str_detect(how_have_you_heard_of_wellspring, "Website"),
         family = str_detect(how_have_you_heard_of_wellspring, "Family"),
         social_media = str_detect(how_have_you_heard_of_wellspring, "Social Media"),
         other = str_detect(how_have_you_heard_of_wellspring, "Other"))

```

```{r create-new-variables, include=FALSE, results=FALSE}
# dataset dimensions
data_attendance_records |> 
  dim()

# What members register for the most events?
data_attendance_records |> 
  group_by(member_id) |>
  summarise(n=n()) |>
  arrange(desc(n))

# Let's examine information on the member with the highest attendance
high_attendance <- data_attendance_records |> 
  filter(member_id == "003ON000007sHYtYAM")

data_patient_members |> filter(member_id == "003ON000007sHYtYAM")

# What is range of registration dates for members in first table
data_patient_members |> 
  group_by(member_start_year) |>
  summarise(n=n()) |>
  arrange(desc(n))
```

## A heading that starts on a new page

This document shows a few basics on making slides with R markdown.

To produce the slides, Render this qmd document by clicking at the top of the screen

You will need to submit a qmd and pdf version of your slides.

You must use the same slides in your video presentation and at the in-person poster fair (printed slides)

## A slide with a bulleted list

-   Bullet 1
-   Bullet 2

## A slide with a numbered list

1.  First point
2.  Second point

# New Section by using a bigger header (one \# sign)

## First slide in new section - multiple columns

::: columns
::: {.column width="40%"}
-   Bullet 1 in left
-   Bullet 2 in left
:::

::: {.column width="60%"}
Right column
:::
:::

## Introduction: Aim

::: {.callout-tip title="Overall Aim" style="font-size: 10pt"}
The main goal of this project is to help Wellspring gain insight into how best to maximize the number of people who attend or are interested in attending Wellspring services.
:::

-   We will first discover whether the redesign changed the median age of members who engage in Wellspring services.

-   We will then find if age is a significant factor in how often members engage in Wellspring services.

-   Finally, we will look into whether online events encourage members to attend events more often.

## Introduction: Data

-   We will be using the `Member_Background.csv` file as our data.

-   Our sample will be all the members whose data is listed in this `csv` file, which we will treat as representative of the population, which is all Wellspring members.

-   The main audience of this analysis will be Wellspring, who we seek to provide insight to. However, this analysis may prove useful for all who are interested in how best to serve the needs of cancer patients and their family and friends.

## Data Summary: Dataset

-   The `Member_Background.csv` file has 4829 observations. This means the data of nearly 5000 Wellspring members is stored in this file!

-   The file has a total of 68 variables; however, we will only be using the below,

    -   `delivery_year`, `delivery_month`, `delivery_day`: These variables inform us of the date of each Wellspring service.

    -   `age_years`: The age of each Wellspring member.

    -   `number_of_present_service_deliveries`, `number_of_absent_service_deliveries`: The number of services that members are present or absent in.

    -   `attendance_status`: Whether a member attended a service.

    -   `service_session_location`: Whether a program was held online or in-person.

## Data Summary: Methodology

-   We will first perform data wrangling to only get the data we need, and filter out all datapoints where information may be missing.

-   Afterwards, we will visualize our data.

-   Finally, we will perform data analysis and interpret the results that we find.

More details about data wrangling will be in each research question.

## Research Question 1

# [Research Question 2:]{.underline} **Is there an association between a memberâ€™s age and the number of services that they attended?**

## RQ2: Variables and Methodology

**Variables**

-   `age_years`: Age of a member
-   `number_of_present_service_deliveries`: Total number of services in which the member was marked as "Present"

**Methodology**

-   I will use simple linear regression on the two variables.

-   The aim is to find if an association exists between age and the number of services that a member attends

-   Finding this information allows Wellspring to discover if they should make changes to their services to cater to a more diverse age group.

-   This linear regression will be *predictive* -- we are trying to see if a higher or lower age predicts lower attendance in service deliveries.

## RQ2: Data Wrangling

::: {.callout-tip title="Purpose" style="font-size: 10pt"}
Before we perform the linear regression to find our results, we have to first clean up the raw data that we have.
:::

To do this, we will first filter out all observations where either `age_years` or `number_of_present_service_deliveries` is undefined. We will also filter out any observations where `age_years` $<0$. Then, we will only select the relevant variables. Doing so should give us a table,

```{r}
dataset <- data_patient_members |> filter(! is.na(age_years) & ! is.na(number_of_present_service_deliveries) & age_years >= 0) |> select(age_years, number_of_present_service_deliveries)

glimpse(dataset)
```

## RQ2: Visualization

Before modelling, we will first visualize the data. Observe that

```{r}
plot <- ggplot(dataset, aes(x=age_years, y=number_of_present_service_deliveries)) +
	geom_point(color="black") +
	geom_smooth(method="lm", se=FALSE) +
	labs(x="Age", y="Number of service deliveries attended") +
	theme_bw()

plot
```

## RQ2: Modelling

Now we can perform a linear model of our data using the `lm` function. Doing so tells us that the relationship between age (denoted $a$) and the number of services attended $S$ can be written as

$$
S=0.02987a+55.70681
$$

Additionally, we have the $p$-values 0.00 and 0.02 and the $r^2$ value 0.002193643.

## RQ2: Interpretation

In our visualization, seemingly at age 60, there seems to be a small peak from the scatter plot; performing two linear regressions for members who are at most 60 and members who are not still gives us the equations

-   $S=0.035a+47.478$ (For members of age at most 60)

-   $S=-0.003a+69.203$ (For members of age above 60)

And very small $r^2$ values for both.

From the $p$-values, $r^2$, and equations found from our initial analysis, in addition to the above, we could conclude that the association between a member's age and the number of services they attended is statistically insignificant.

## Research Question 3

## Conclusion
